<?php

use Infobip\Configuration;
use Infobip\Api\SmsApi;
use Infobip\Model\SmsDestination;
use Infobip\Model\SmsTextualMessage;
use Infobip\Model\SmsAdvancedTextualRequest;
use Twilio\Rest\Client;

require __DIR__ . "/vendor/autoload.php";

// Load environment variables
$dotenv = Dotenv\Dotenv::createImmutable(__DIR__);
$dotenv->load();

$number = $_POST["number"];
$message = $_POST["message"];

if ($_POST["provider"] === "infobip") {
  // Infobip

  $base_url = $_ENV["INFOBIP_API_BASE_URL"];
  $api_key = $_ENV["INFOBIP_API_KEY"];

  $configuration = new Configuration(host: $base_url, apiKey: $api_key);

  $api = new SmsApi(config: $configuration);

  $destination = new SmsDestination(to: $number);

  $message = new SmsTextualMessage(
    destinations: [$destination],
    text: $message,
    from: "FLIP"
  );

  $request = new SmsAdvancedTextualRequest(messages: [$message]);

  $response = $api->sendSmsMessage($request);
} elseif ($_POST["provider"] === "twilio") {
  // Twilio
  // Phone must be verified in Twilio.

  $account_id = $_ENV["TWILIO_ACCOUNT_ID"];
  $auth_token = $_ENV["TWILIO_AUTH_TOKEN"];

  $client = new Client($account_id, $auth_token);

  $twilio_number = "+16162716798";
  // $twilio_number = "+16164465848";

  $client->messages->create(
    $number,
    [
      "from" => $twilio_number,
      "body" => $message
    ]
  );
} elseif ($_POST["provider"] === "awssns") {
  // AWS SNS
  // Phone must be verified in AWS Pinpoint (or maybe SNS? not sure).
  // The following was auto-generated by Copilot. Let's see if it works.
  $aws_key = $_ENV["AWS_KEY"];
  $aws_secret = $_ENV["AWS_SECRET"];
  $aws_region = $_ENV["AWS_REGION"];
  $aws_topic = $_ENV["AWS_TOPIC"];

  $sns = new Aws\Sns\SnsClient([
    "version" => "latest",
    "region" => $aws_region,
    "credentials" => [
      "key" => $aws_key,
      "secret" => $aws_secret
    ]
  ]);

  $sns->publish([
    "Message" => $message,
    "PhoneNumber" => $number
  ]);
} else {
  echo "Invalid provider.";
  exit;
}

echo "Message sent.";
